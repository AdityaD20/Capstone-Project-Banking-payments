spring.application.name=payment-payroll-system

spring.datasource.url=jdbc:mysql://localhost:3306/payment-payroll-db-lastcaptsonnew?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=Aditya20@

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


# The path to keystore file 
server.ssl.key-store=classpath:payroll-keystore.p12

# The password you chose when creating the keystore
server.ssl.key-store-password=password123

# The alias you gave to your certificate
server.ssl.key-alias=payrollapp



app.jwt.secret=db7a094a73700360444f70869e2199942ce5988b06c0405ee1c222c701c92233
#30 mins
app.jwt.expiration-ms=1800000 

logging.level.org.springframework.security=DEBUG

# Cloudinary Configuration
cloudinary.cloud_name=dn0leiqjx
cloudinary.api_key=547622553818998
cloudinary.api_secret=Rc1faTbyfeNtwvh2SntJsotwCwE

# size of single file.
spring.servlet.multipart.max-file-size=5MB

# size of multiple files.
spring.servlet.multipart.max-request-size=20MB

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=aditya.dinde.comp@gmail.com
spring.mail.password=iqcfplrmslraxgmr
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# --- Spring Batch Configuration ---
# This tells Spring Batch to create its meta-data tables on startup if they don't exist.
spring.batch.jdbc.initialize-schema=always
spring.batch.job.enabled=false

# Google reCAPTCHA
google.recaptcha.secret=6Lc7TOYrAAAAAA-35Ga2XhL61zXy-ND4IuCVVHPj
google.recaptcha.site-key=6Lc7TOYrAAAAAFH0FgYGH_Ur17gTxpIT709P3mok

